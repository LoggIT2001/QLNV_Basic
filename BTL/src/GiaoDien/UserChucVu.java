/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GiaoDien;


import javax.swing.table.DefaultTableModel;
import Dao.ChucVuDao;
import Model.ChucVu;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author Tuan
 */
public class UserChucVu extends javax.swing.JPanel {

    /**
     * Creates new form TimKiemChucVu
     */
    private ArrayList<ChucVu> CVList;
    DefaultTableModel chucvuDefaultTableModel;
    public UserChucVu() {
        initComponents();
         chucvuDefaultTableModel = (DefaultTableModel) tblchucvu.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblchucvu = new javax.swing.JTable();
        timkiemcvBTN = new javax.swing.JButton();
        timkiemCB = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(204, 255, 204));

        tblchucvu.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        tblchucvu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã chức vụ", "Tên chức vụ"
            }
        ));
        tblchucvu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblchucvuMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblchucvu);

        timkiemcvBTN.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        timkiemcvBTN.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/btn_search.png"))); // NOI18N
        timkiemcvBTN.setText(" Tìm kiếm ");
        timkiemcvBTN.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timkiemcvBTNMouseClicked(evt);
            }
        });
        timkiemcvBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timkiemcvBTNActionPerformed(evt);
            }
        });

        timkiemCB.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        timkiemCB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tìm kiếm theo mã chức vụ", "Tìm kiếm theo tên chức vụ" }));
        timkiemCB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                timkiemCBMouseClicked(evt);
            }
        });
        timkiemCB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                timkiemCBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(timkiemcvBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71)
                        .addComponent(timkiemCB, 0, 340, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timkiemCB, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(timkiemcvBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(175, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void tblchucvuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblchucvuMouseClicked
       
    }//GEN-LAST:event_tblchucvuMouseClicked

    private void timkiemcvBTNMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timkiemcvBTNMouseClicked
        ChucVuDao cvd = new ChucVuDao();
        String choice = timkiemCB.getItemAt(timkiemCB.getSelectedIndex());
        if (choice.equals("Tìm kiếm theo mã chức vụ")) {
            String input = JOptionPane.showInputDialog(null, "Nhập mã chức vụ ");
            if (input != null && input.length() > 0) {
                if (cvd.timKiemMaCv(input) != null) {
                    chucvuDefaultTableModel.setRowCount(0);
                    chucvuDefaultTableModel.addRow(cvd.timKiemMaCv(input).toObject());
                    JOptionPane.showMessageDialog(null, "Tìm thành công ! ");
                } else {
                    JOptionPane.showMessageDialog(null, "Mã chức vụ không tồn tại ! ");
                }
            }
        } else {
            String input = JOptionPane.showInputDialog(null, "Nhập tên chức vụ");
            if (input != null && input.length() > 0) {
                if (cvd.timkiemTenCv(input) != null) {
                    chucvuDefaultTableModel.setRowCount(0);
                    chucvuDefaultTableModel.addRow(cvd.timkiemTenCv(input).toObject());
                    JOptionPane.showMessageDialog(null, "Tìm thành công ! ");
                } else {
                    JOptionPane.showMessageDialog(null, "Tên chức vụ không tồn tại ! ");
                }
            }
        }
    }//GEN-LAST:event_timkiemcvBTNMouseClicked

    private void timkiemcvBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timkiemcvBTNActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timkiemcvBTNActionPerformed

    private void timkiemCBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_timkiemCBMouseClicked

    }//GEN-LAST:event_timkiemCBMouseClicked

    private void timkiemCBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_timkiemCBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_timkiemCBActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblchucvu;
    private javax.swing.JComboBox<String> timkiemCB;
    private javax.swing.JButton timkiemcvBTN;
    // End of variables declaration//GEN-END:variables
}
